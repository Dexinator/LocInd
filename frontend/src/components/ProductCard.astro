---
// Importamos CollectionEntry de astro:content
import type { CollectionEntry } from 'astro:content';
import ProductImage from './ProductImage.astro';

// Actualizamos la interfaz para esperar una CollectionEntry en lugar de MarkdownInstance
// si usamos getCollection en la página que llama a este componente.
interface Props {
    product: CollectionEntry<'products'>; // Asumiendo que viene de getCollection('products')
}

const { product } = Astro.props;
// Accedemos a los datos a través de .data y al slug/url a través del objeto principal
const { title, description, image_filename, availability, price } = product.data;
const url = `/productos/${product.slug}`; // Construimos la URL manualmente

// Lógica para mostrar el precio o "Consultar"
const displayPrice = price === 'Consultar' ? 'Consultar' : `$${price.replace(' USD', '')}`;
const isConsultar = price === 'Consultar';
---

<a href={url} class="group flex flex-col h-full rounded-lg overflow-hidden shadow-md border border-border transition-all 
                   hover:shadow-lg hover:border-brand-blue/40 hover:scale-[1.01] dark:hover:border-brand-blue/40">
    
    {/* Imagen del Producto */}
    <div class="relative aspect-square overflow-hidden bg-gray-100 dark:bg-gray-800">
        <ProductImage 
            filename={image_filename}
            alt={title}
            width={400}
            height={400}
            class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-[1.03]"
            format="webp"
            quality={80}
        />
        
        {/* Badge para disponibilidad */}
        {availability === 'out of stock' && (
            <span class="absolute top-3 right-3 bg-error/80 text-white text-xs font-semibold px-2 py-1 rounded">
                Agotado
            </span>
        )}
        {isConsultar && (
            <span class="absolute top-3 right-3 bg-brand-purple/80 text-white text-xs font-semibold px-2 py-1 rounded">
                Bajo consulta
            </span>
        )}
    </div>
    
    {/* Información del Producto */}
    <div class="flex flex-col flex-grow p-4 bg-background dark:bg-background">
        <h3 class="text-lg font-bold font-heading mb-1 text-text-base group-hover:text-brand-blue dark:group-hover:text-brand-sky transition-colors">
            {title}
        </h3>
        
        <p class="text-sm text-text-muted line-clamp-2 mb-3">
            {description.length > 100 ? description.substring(0, 100) + '...' : description}
        </p>
        
        <div class="mt-auto">
            <span class:list={[
                "font-bold text-lg",
                isConsultar ? "text-brand-purple" : "text-brand-blue"
            ]}>
                {displayPrice}
            </span>
            
            {/* CTA */}
            <div class="mt-3 text-sm font-medium text-brand-blue dark:text-brand-sky">
                Ver detalles <span class="ml-1 group-hover:ml-2 transition-all duration-300">→</span>
            </div>
        </div>
    </div>
</a> 